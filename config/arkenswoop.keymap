/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp TAB>;
        };

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp Q            &kp W            &kp E         &kp R              &kp T                         &kp Y           &kp U             &kp I         &kp O        &kp P
&kp A            &kp S            &kp D         &mt LEFT_ALT F     &mt LEFT_GUI G                &mt RIGHT_GUI H &mt RIGHT_ALT J   &kp K         &kp L        &kp SEMICOLON
&kp Z            &kp X            &kp C         &kp V              &kp B                         &kp N           &kp M             &kp COMMA     &kp DOT      &kp RIGHT_SHIFT
                                  &kp C_MUTE    &mo 1              &mt LEFT_CONTROL SPACE        &kp ENTER       &mo 2             &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };

        number {
            label = "NUMBER";
            bindings = <
&kp N1       &kp N2      &kp N3     &kp N4           &kp N5          &kp N6             &kp N7      &kp N8      &kp N9     &kp N0
&kp EQUAL    &kp MINUS   &kp UP     &kp LEFT_SHIFT   &kp LEFT_GUI    &kp RIGHT_GUI      &kp BSPC    &kp SEMICOLON    &kp SQT   &kp BACKSLASH
&kp GRAVE    &kp LEFT    &kp DOWN   &kp RIGHT        &kp LEFT_ALT    &kp RIGHT_ALT      &kp LBKT    &kp RBKT    &kp SLASH  &kp RIGHT_SHIFT
                         &trans     &trans           &kp SPACE       &kp LEFT_CONTROL   &kp TAB     &to 3
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN &inc_dec_kp RIGHT LEFT>;
        };

        functional {
            label = "FUNCTIONAL";
            bindings = <
&kp F1           &kp F2       &kp F3        &kp F4  &kp F5          &kp F6     &kp F7     &kp F8    &kp F9   &kp F10
&kp F11          &kp F12      &trans        &trans  &trans          &kp LBKT   &kp RBKT   &kp LT    &kp GT   &trans
&bt BT_CLR_ALL   &bt BT_NXT   &bt BT_PRV    &trans  &trans          &kp LBRC   &kp RBRC   &kp LPAR  &kp RPAR &trans
                              &trans        &kp ESC &kp SPACE       &kp TAB    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };
    gaming {
        label = "GAMING";
        bindings = <
&kp TAB          &kp N1   &kp N2       &kp N3       &kp N4          &kp N5       &kp N6     &kp N7    &kp N8    &kp N9
&kp LEFT_SHIFT   &kp Q    &kp W        &kp E        &kp R           &kp F        &kp I      &kp UP    &kp O     &kp H
&kp LEFT_CONTROL &kp A    &kp S        &kp D        &mt C G         &kp B        &kp LEFT   &kp DOWN  &kp RIGHT &kp M
                          &trans       &kp LEFT_ALT &kp SPACE       &kp ENTER    &kp ESC    &to 0
        >;

        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
    };
    };
};
